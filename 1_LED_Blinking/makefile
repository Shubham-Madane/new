#   Makefile generated by Keil2GCC converter (c)2018 Ondrej Sterba.
# 
# GENERATED MAKEFILE IS PROVIDED "AS IS" AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.
#/

PROJECT = LED1

CC	= arm-none-eabi-gcc
CPP	= arm-none-eabi-g++
AS	= arm-none-eabi-as
LD	= arm-none-eabi-g++
CP	= arm-none-eabi-objcopy
OS	= arm-none-eabi-size
OD	= arm-none-eabi-objdump

VECTOR	= ./gcc_startupfile_stm32g431mbtx.s

LDSCRIPT = ./gcc_linkerfile_stm32g431mbtx.ld
LDFLAGS  = -mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -T$(LDSCRIPT) -lnosys -Wl,--gc-sections -Wl,-Map,$(PROJECT).map

INC = -I./Drivers/CMSIS/Device/ST/STM32G4xx/Include\
      -I./Drivers/CMSIS/Include\
      -I./Drivers/STM32G4xx_HAL_Driver/Inc\
      -I./Drivers/STM32G4xx_HAL_Driver/Inc/Legacy\
      -I./Inc\

SRC = $(VECTOR) \
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_cortex.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dma.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dma_ex.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_exti.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash_ex.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash_ramfunc.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_gpio.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc_ex.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim.c\
      ./Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim_ex.c\
      ./Src/main.c\
      ./Src/stm32g4xx_hal_msp.c\
      ./Src/stm32g4xx_it.c\
      ./Src/system_stm32g4xx.c\

#  C++ source files
CPPFILES = $(filter %.cpp, $(SRC))
#  C source files
CFILES = $(filter %.c, $(SRC))
#  Assembly source files
ASMFILES = $(filter %.s, $(SRC))

# Object files
CPPOBJ = $(CPPFILES:.cpp=.o)
COBJ = $(CFILES:.c=.o)
SOBJ = $(ASMFILES:.s=.o)
OBJ  = $(CPPOBJ) $(COBJ) $(SOBJ)

# Compile thumb for cortex-m4 with debug info
CPPFLAGS  = -g -mthumb -DUSE_HAL_DRIVER -DSTM32G431xx -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Og -fpack-struct -fdata-sections -ffunction-sections -fno-exceptions -fno-rtti -std=c++11
CFLAGS  = -g -mthumb -DUSE_HAL_DRIVER -DSTM32G431xx -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Og -fpack-struct -fdata-sections -ffunction-sections -std=c99
ASFLAGS = -g -mthumb -mcpu=cortex-m4


all: $(SRC) $(PROJECT).elf $(PROJECT).hex $(PROJECT).bin

$(PROJECT).bin: $(PROJECT).elf
	@$(CP) -O binary $(PROJECT).elf $@

$(PROJECT).hex: $(PROJECT).elf
	@$(CP) -O ihex $(PROJECT).elf $@

$(PROJECT).elf: $(OBJ)
	@echo Linking
	@$(LD) $(LDFLAGS) $(OBJ) -o $@
	@$(OS) -t $(PROJECT).elf


$(CPPOBJ): %.o: %.cpp
	@echo $<
	@$(CPP) -c $(INC) $(CPPFLAGS) $< -o $@

$(COBJ): %.o: %.c
	@echo $<
	@$(CC) -c $(INC) $(CFLAGS) $< -o $@

$(SOBJ): %.o: %.s
	@echo $<
	@$(AS) -c $(ASFLAGS) $< -o $@

clean:
	@rm -f $(PROJECT).elf $(PROJECT).bin $(PROJECT).map $(PROJECT).hex $(PROJECT).lss $(OBJ)

install: $(PROJECT).bin
	JLink.exe -device STM32G431MBTx -CommanderScript ./flash.jlink
